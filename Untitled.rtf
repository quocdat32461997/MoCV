{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid1\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\li720\fi-360\ri0\partightenfactor0
\ls1\ilvl0
\f0\fs36 \cf0 {\listtext	
\f1 \uc0\u9642 
\f0 	}Linear scaling is the only technique that changes least colors of original pixels.  Both two linear-scaling methods on XYZ and LUV spaces show no difference in performance. \
{\listtext	
\f1 \uc0\u9642 
\f0 	}Histogram equalization changes colors. The color changes could be clearly observed in Figures 4, 6, 11, 13, 18, 19, 20,  and 21. The color changes indices that the histogram equalization provided by OpenCV and described in class does not handle out-of-range values. Among these figures, Figures 4, 6, 11, 13, 18, and 20 are the results of applying histogram equalization on XYZ space. It is obvious that the histogram equalization on XYZ space performs worse than the histogram equalization on LUV space. Hence, both OpenCV and class histogram equalization on LUV space are the best methods among 4 histogram equalization methods. Another observation is the histogram equalization on XYZ space add \'93green\'94 color into the pixels\'92 colors. An obvious example is Figure 6. \
{\listtext	
\f1 \uc0\u9642 
\f0 	}Figures 14 and 16 are two obvious examples that the histogram equalization on LUV space would result into the contrast-improved images. \
}